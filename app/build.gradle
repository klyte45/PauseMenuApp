apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "idea"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.halkyproject.pausemenu"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', "${projectDir}/src/generatedKotlin"]
        }
    }
    repositories {
        mavenLocal()
    }
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
    configurations {
        lifehack
        lifehackFull
    }
    dependencies {
        lifehack('com.halkyproject:lifehack:0.0.0-SNAPSHOT') {
            transitive = false
        }
        lifehackFull 'com.halkyproject:lifehack:0.0.0-SNAPSHOT'
    }

}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.apache.tomcat:tomcat-util:7.0.22'
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // use kapt for Kotlin
    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$room_version"
    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"
    def lifecycle_version = "1.1.1"
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'org.reflections:reflections:0.9.11'
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
    implementation configurations.lifehack
}
android {
    lintOptions {
        abortOnError false
    }

}

task generateKotlin {
    doLast {
        ant.importBuild 'generateSources.xml'
        ant.properties["buildDir"] = "${projectDir}/src/generatedKotlin"
        ant.project.executeTarget("generateModels")
    }
}

task runDatabaseCreation(type: JavaExec) {
    classpath configurations.lifehackFull.asPath
    main = 'com.halkyproject.lifehack.routines.EntityProcessorRunner'
}


tasks.findByName("preBuild").dependsOn generateKotlin
tasks.findByName("preBuild").dependsOn runDatabaseCreation
